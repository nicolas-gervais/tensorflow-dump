import os
os.environ['TF_CPP_MIN_LOG_LEVEL'] = '3'
import numpy as np
from tensorflow.keras.preprocessing.image import ImageDataGenerator
import pandas as pd
from tensorflow.keras.applications.inception_v3 import InceptionV3
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense, Flatten
os.chdir('/home/nicolas/Documents/Datasets/utkface')

women = [i for i in os.listdir() if 10 < int(i.split('_')[0]) < 60 and i.split('_')[1] == '1']
men = [i for i in os.listdir() if 10 < int(i.split('_')[0]) < 60 and i.split('_')[1] == '0']
N_SAMPLES = 8000
LEN_TRAIN = int(N_SAMPLES*8e-1)
LEN_TEST = N_SAMPLES - LEN_TRAIN

print(f'We have {len(men)} men and {len(women)} women')

women = np.random.choice(women, N_SAMPLES)
men = np.random.choice(men, N_SAMPLES)

women_train_df = pd.DataFrame(
    zip(*[women[:LEN_TRAIN],
          np.repeat(0, LEN_TRAIN)]),
    columns=['fname', 'sex'], dtype='str')

men_train_df = pd.DataFrame(
    zip(*[men[:LEN_TRAIN],
          np.repeat(1, LEN_TRAIN)]),
    columns=['fname', 'sex'], dtype='str')

train_df = pd.concat([women_train_df, men_train_df],
                     axis=0, sort=False).sample(frac=1)

women_test_df = pd.DataFrame(
    zip(*[women[LEN_TRAIN:],
          np.repeat(0, LEN_TEST)]),
    columns=['fname', 'sex'], dtype='str')

men_test_df = pd.DataFrame(
    zip(*[men[LEN_TRAIN:],
          np.repeat(1, LEN_TEST)]),
    columns=['fname', 'sex'], dtype='str')

test_df = pd.concat([women_test_df, men_test_df],
                    axis=0, sort=False).sample(frac=1)

assert train_df['sex'].astype(int).sum(axis=0) == len(train_df)//2, 'Not equally split.'
assert test_df['sex'].astype(int).sum(axis=0) == len(test_df)//2, 'Not equally split.'

img_generator = ImageDataGenerator(
    rescale=1./255.,
    width_shift_range=2e-1,
    height_shift_range=2e-1,
    brightness_range=[.7, 1.3],
    zoom_range=3e-1,
    horizontal_flip=True,
)

train_generator = img_generator.flow_from_dataframe(
    dataframe=train_df,
    directory='./',
    x_col='fname',
    y_col='sex',
    target_size=(150, 150),
    batch_size=32,
    class_mode='binary'
)

test_generator = img_generator.flow_from_dataframe(
    dataframe=test_df,
    directory='./',
    x_col='fname',
    y_col='sex',
    target_size=(150, 150),
    batch_size=32,
    class_mode='binary'
)


base_arch = InceptionV3(include_top=False, pooling='max')
model = Sequential([
    base_arch,
    Dense(96, activation='relu'),
    Dense(2, activation='softmax')
])

for layer in model.layers[:-3]:
    layer.trainable = False

model.compile(loss='sparse_categorical_crossentropy',
              optimizer='adam',
              metrics=['accuracy'])

history = model.fit(x=train_generator,
                    epochs=25,
                    validation_data=test_generator,
                    class_weight=[5e-1, 5e-1])
